# Generated by Django 4.0.4 on 2022-05-26 19:47

import dashboard.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, validators=[dashboard.models.CustomUser.validate_email])),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_company', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Companies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('picture', models.ImageField(default='defaultuser.png', upload_to='company_images')),
                ('company_name', models.CharField(default='To Be Announced', max_length=60)),
                ('company_title', models.CharField(max_length=100)),
                ('linkedin', models.URLField(default='https://www.linkedin.com')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TechSkills',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=65, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('picture', models.ImageField(default='defaultuser.png', upload_to='profile_images')),
                ('location', models.CharField(max_length=100)),
                ('personal_goal', models.TextField(max_length=500)),
                ('personal_story', models.TextField(max_length=500)),
                ('education', models.CharField(max_length=100)),
                ('linkedin', models.URLField()),
                ('github', models.URLField()),
                ('portfolio', models.URLField()),
                ('interests', multiselectfield.db.fields.MultiSelectField(choices=[('FE', 'Front-End'), ('BE', 'Back-End'), ('FS', 'Full-Stack'), ('MD', 'Mobile Dev'), ('DO', 'Dev-Ops'), ('CS', 'Cyber-Sec.')], max_length=17)),
                ('previous_occupation', models.CharField(max_length=100)),
                ('availability', models.CharField(choices=[('IA', 'Immediately Available'), ('AW', 'About 2 Weeks'), ('MT', 'Moving Target')], max_length=2)),
                ('workstatus', models.CharField(choices=[('AL', 'Actively Looking'), ('AC', 'Just Curious'), ('HE', 'Happily Employed')], max_length=2)),
                ('relocation', models.CharField(choices=[('OK', 'Open To Relocate'), ('NO', 'No Relocation')], max_length=2)),
                ('skills', models.ManyToManyField(to='dashboard.techskills')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JobPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_approved', models.BooleanField(default=False)),
                ('company_name', models.CharField(max_length=60)),
                ('position_title', models.CharField(max_length=60)),
                ('salary', models.IntegerField(blank=True, null=True)),
                ('location', models.CharField(max_length=65)),
                ('skill_one', models.CharField(max_length=100)),
                ('skill_two', models.CharField(max_length=100)),
                ('skill_three', models.CharField(max_length=100)),
                ('job_link', models.URLField()),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='companyjob', to='dashboard.companies')),
            ],
        ),
    ]
